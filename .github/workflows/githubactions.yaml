name: 'Terraform ConfluxDB Pipeline'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    environment: production
    env:
      TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
      TF_VAR_iam_role_arn: ${{ vars.IAM_ROLE_ARN }}

    defaults:
      run:
        shell: bash

    steps:
    # ----------------------------------------------------------------------
    # 1. SETUP
    # ----------------------------------------------------------------------
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{vars.IAM_ROLE_ARN }}
        aws-region: eu-west-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0

    # ----------------------------------------------------------------------
    # 2. INITIALIZE AND VALIDATE
    # ----------------------------------------------------------------------
    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    # ----------------------------------------------------------------------
    # 3. PLAN - Runs for PRs and before apply on main
    # ----------------------------------------------------------------------
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      continue-on-error: true

    - name: Post Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${{ steps.plan.outputs.stdout }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    # ----------------------------------------------------------------------
    # 4. APPLY - Runs ONLY on main branch AFTER manual approval
    # ----------------------------------------------------------------------
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan
